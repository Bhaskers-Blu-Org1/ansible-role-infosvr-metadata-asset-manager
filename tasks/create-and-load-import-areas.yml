---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: check existing connectivity
  shell: >
          cd `cat /.dshome` &&
          . dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -u {{ ibm_infosvr_metadata_asset_mgr_admin_user }}
          -w {{ ibm_infosvr_metadata_asset_mgr_admin_user_pwd }}
          -s {{ ibm_infosvr_metadata_asset_mgr_services_host }}
          -p {{ ibm_infosvr_metadata_asset_mgr_services_console_port }}
          -a list
          -t area
          -nof
  args:
    executable: /bin/bash
  register: ibm_infosvr_metadata_asset_manager_existing_import_areas
  changed_when: False

# TODO: Cognos (and others?) have just item.password ...
#- name: encrypt any password information
#  no_log: True
#  shell: >
#          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/encrypt.sh
#          {% if item.dcn is defined %}{{ item.dcn.password }}{% else if item.password is defined %}{{ item.password }}{% endif %}
#  args:
#    executable: /bin/bash
#  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"
#  changed_when: False
#  register: __ibm_infosvr_metadata_asset_manager_encrypted_passwords

- name: transfer import area templates
  template:
    src: "{{ item.type }}-v{{ ibm_infosvr_metadata_asset_mgr_installed_version|replace('.', '') }}.xml.j2"
    dest: "/tmp/{{ item.name|replace(' ', '_') }}-{{ item.type }}.xml"
    owner: "{{ ibm_infosvr_metadata_asset_mgr_dsadm_user }}"
    group: "{{ ibm_infosvr_metadata_asset_mgr_dsadm_group }}"
    mode: 0600
  when: ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(item.name) == -1
  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"

- name: configure import areas via IMAM (skipping local files)
  shell: >
          cd `cat /.dshome` &&
          . dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -u {{ ibm_infosvr_metadata_asset_mgr_admin_user }}
          -w {{ ibm_infosvr_metadata_asset_mgr_admin_user_pwd }}
          -s {{ ibm_infosvr_metadata_asset_mgr_services_host }}
          -p {{ ibm_infosvr_metadata_asset_mgr_services_console_port }}
          -a import
          -i '{{ item.name }}'
          -ad '{{ item.description }}'
          -id '{{ item.description }}'
          -mn {{ item.metadata_interchange_server }}
          -pf /tmp/{{ item.name|replace(' ', '_') }}-{{ item.type }}.xml
  args:
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(item.name) == -1
        and (item.file is not defined)
  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"

- name: configure import areas via IMAM (with local files)
  shell: >
          cd `cat /.dshome` &&
          . dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -u {{ ibm_infosvr_metadata_asset_mgr_admin_user }}
          -w {{ ibm_infosvr_metadata_asset_mgr_admin_user_pwd }}
          -s {{ ibm_infosvr_metadata_asset_mgr_services_host }}
          -p {{ ibm_infosvr_metadata_asset_mgr_services_console_port }}
          -a import
          -i '{{ item.name }}'
          -ad '{{ item.description }}'
          -id '{{ item.description }}'
          -mn {{ item.metadata_interchange_server }}
          -pf /tmp/{{ item.name|replace(' ', '_') }}-{{ item.type }}.xml
          -l {{ item.file }}
  args:
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(item.name) == -1
        and (item.file is defined)
  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"

- name: remove connectivity configuration files
  file: state=absent path=/tmp/{{ item.name|replace(' ', '_') }}-{{ item.type }}.xml
  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"

- name: re-import existing import areas via IMAM (skipping local files)
  shell: >
          cd `cat /.dshome` &&
          . dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -u {{ ibm_infosvr_metadata_asset_mgr_admin_user }}
          -w {{ ibm_infosvr_metadata_asset_mgr_admin_user_pwd }}
          -s {{ ibm_infosvr_metadata_asset_mgr_services_host }}
          -p {{ ibm_infosvr_metadata_asset_mgr_services_console_port }}
          -a reimport
          -i '{{ item.name }}'
  args:
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(item.name) != -1
        and (item.file is not defined)
  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"
  register: __ibm_infosvr_metadata_asset_mgr_reimport
  failed_when: not (__ibm_infosvr_metadata_asset_mgr_reimport.rc == 0 or __ibm_infosvr_metadata_asset_mgr_reimport.rc == 246)

- name: list any imports that require review (skipping local files)
  debug:
    msg: "Import of '{{ item.item.name }}' included a potentially destructive change -- requires reviewing in Metadata Asset Manager prior to sharing."
  no_log: True
  changed_when: True
  when: __ibm_infosvr_metadata_asset_mgr_reimport.results is defined and item.rc == 246
  with_items: "{{ __ibm_infosvr_metadata_asset_mgr_reimport.results }}"

- name: re-import existing import areas via IMAM (with local files)
  shell: >
          cd `cat /.dshome` &&
          . dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -u {{ ibm_infosvr_metadata_asset_mgr_admin_user }}
          -w {{ ibm_infosvr_metadata_asset_mgr_admin_user_pwd }}
          -s {{ ibm_infosvr_metadata_asset_mgr_services_host }}
          -p {{ ibm_infosvr_metadata_asset_mgr_services_console_port }}
          -a reimport
          -i '{{ item.name }}'
          -l {{ item.file }}
  args:
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(item.name) != -1
        and (item.file is defined)
  with_items: "{{ ibm_infosvr_metadata_asset_mgr_import_areas }}"
  register: __ibm_infosvr_metadata_asset_mgr_reimport_local
  failed_when: not (__ibm_infosvr_metadata_asset_mgr_reimport_local.rc == 0 or __ibm_infosvr_metadata_asset_mgr_reimport_local.rc == 246)

- name: list any imports that require review (with local files)
  debug:
    msg: "Import of '{{ item.item.name }}' included a potentially destructive change -- requires reviewing in Metadata Asset Manager prior to sharing."
  no_log: True
  changed_when: True
  when: __ibm_infosvr_metadata_asset_mgr_reimport_local.results is defined and item.rc == 246
  with_items: "{{ __ibm_infosvr_metadata_asset_mgr_reimport_local.results }}"

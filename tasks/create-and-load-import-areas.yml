---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: import_areas - check existing connectivity
  shell: >
          source dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -af {{ __ibm_infosvr_metadata_asset_mgr_auth_file.path }}
          -a list
          -t area
          {% if ibm_infosvr_metadata_asset_mgr_installed_version_full != "11.5.0.1" %}-nof{% endif %}
  args:
    chdir: "{{ ibm_infosvr_metadata_asset_mgr_install_location }}/Server/DSEngine"
    executable: /bin/bash
  register: ibm_infosvr_metadata_asset_manager_existing_import_areas
  changed_when: False

- name: import_areas - encrypt any password information
  no_log: True
  command: >
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/encrypt.sh
          {% if __iimam_import_areas.dcn is defined and __iimam_import_areas.dcn.password is defined %}
          {{ __iimam_import_areas.dcn.password }}
          {% elif __iimam_import_areas.password is defined %}
          {{ __iimam_import_areas.password }}
          {% else %}
          empty
          {% endif %}
  with_items: "{{ import_areas }}"
  changed_when: False
  register: __ibm_infosvr_metadata_asset_manager_encrypted_passwords
  loop_control:
    loop_var: __iimam_import_areas
    label: "{{ __iimam_import_areas.name }}"

- name: import_areas - transfer import area templates
  template:
    src: "{{ __iimam_cred.item.type }}-v{{ ibm_infosvr_metadata_asset_mgr_installed_version|replace('.', '') }}.xml.j2"
    dest: "/tmp/{{ __iimam_cred.item.name|replace(' ', '_') }}-{{ __iimam_cred.item.type }}.xml"
    mode: 0600
  when: ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(__iimam_cred.item.name) == -1
  with_items: "{{ __ibm_infosvr_metadata_asset_manager_encrypted_passwords.results }}"
  loop_control:
    loop_var: __iimam_cred
    label: "{{ __iimam_cred.item.name }}"

- name: import_areas - configure import areas via IMAM (skipping local files)
  shell: >
          source dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -af {{ __ibm_infosvr_metadata_asset_mgr_auth_file.path }}
          -a import
          -i '{{ __iimam_import_areas.name }}'
          -ad '{{ __iimam_import_areas.description }}'
          -id '{{ __iimam_import_areas.description }}'
          -mn {{ __iimam_import_areas.metadata_interchange_server }}
          -pf /tmp/{{ __iimam_import_areas.name|replace(' ', '_') }}-{{ __iimam_import_areas.type }}.xml
  args:
    chdir: "{{ ibm_infosvr_metadata_asset_mgr_install_location }}/Server/DSEngine"
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(__iimam_import_areas.name) == -1
        and (__iimam_import_areas.file is not defined)
  with_items: "{{ import_areas }}"
  loop_control:
    loop_var: __iimam_import_areas
    label: "{{ __iimam_import_areas.name }}"

- name: import_areas - configure import areas via IMAM (with local files)
  shell: >
          source dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -af {{ __ibm_infosvr_metadata_asset_mgr_auth_file.path }}
          -a import
          -i '{{ __iimam_import_areas.name }}'
          -ad '{{ __iimam_import_areas.description }}'
          -id '{{ __iimam_import_areas.description }}'
          -mn {{ __iimam_import_areas.metadata_interchange_server }}
          -pf /tmp/{{ __iimam_import_areas.name|replace(' ', '_') }}-{{ __iimam_import_areas.type }}.xml
          -l {{ __iimam_import_areas.file }}
  args:
    chdir: "{{ ibm_infosvr_metadata_asset_mgr_install_location }}/Server/DSEngine"
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(__iimam_import_areas.name) == -1
        and (__iimam_import_areas.file is defined)
  with_items: "{{ import_areas }}"
  loop_control:
    loop_var: __iimam_import_areas
    label: "{{ __iimam_import_areas.name }}"

- name: import_areas - remove connectivity configuration files
  file:
    state: absent
    path: /tmp/{{ __iimam_import_areas.name|replace(' ', '_') }}-{{ __iimam_import_areas.type }}.xml
  with_items: "{{ import_areas }}"
  loop_control:
    loop_var: __iimam_import_areas
    label: "{{ __iimam_import_areas.name }}"

- name: import_areas - re-import existing import areas via IMAM (skipping local files)
  shell: >
          source dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -af {{ __ibm_infosvr_metadata_asset_mgr_auth_file.path }}
          -a reimport
          -i '{{ __iimam_import_areas.name }}'
          {% if ibm_infosvr_metadata_asset_mgr_installed_version_full != "11.5.0.1" %}--checkEventDiff{% endif %}
  args:
    chdir: "{{ ibm_infosvr_metadata_asset_mgr_install_location }}/Server/DSEngine"
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(__iimam_import_areas.name) != -1
        and (__iimam_import_areas.file is not defined)
  with_items: "{{ import_areas }}"
  register: __ibm_infosvr_metadata_asset_mgr_reimport
  failed_when: __ibm_infosvr_metadata_asset_mgr_reimport.rc not in [0, 245, 246]
  loop_control:
    loop_var: __iimam_import_areas
    label: "{{ __iimam_import_areas.name }}"

- name: import_areas - list any imports that require review (skipping local files)
  debug:
    msg: "Import includes a potentially destructive change -- requires manual review in UI prior to sharing."
  changed_when: True
  when: __iimam_reimport.rc is defined and __iimam_reimport.rc == 246
  with_items: "{{ __ibm_infosvr_metadata_asset_mgr_reimport.results }}"
  loop_control:
    loop_var: __iimam_reimport
    label: "{{ __iimam_reimport.item.name }}"

- name: import_areas - re-import existing import areas via IMAM (with local files)
  shell: >
          source dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -af {{ __ibm_infosvr_metadata_asset_mgr_auth_file.path }}
          -a reimport
          -i '{{ __iimam_import_areas.name }}'
          -l {{ __iimam_import_areas.file }}
          {% if ibm_infosvr_metadata_asset_mgr_installed_version_full != "11.5.0.1" %}--checkEventDiff{% endif %}
  args:
    chdir: "{{ ibm_infosvr_metadata_asset_mgr_install_location }}/Server/DSEngine"
    executable: /bin/bash
  when: >
        ibm_infosvr_metadata_asset_manager_existing_import_areas.stdout.find(__iimam_import_areas.name) != -1
        and (__iimam_import_areas.file is defined)
  with_items: "{{ import_areas }}"
  register: __ibm_infosvr_metadata_asset_mgr_reimport_local
  failed_when: __ibm_infosvr_metadata_asset_mgr_reimport_local.rc not in [0, 246]
  loop_control:
    loop_var: __iimam_import_areas
    label: "{{ __iimam_import_areas.name }}"

- name: import_areas - list any imports that require review (with local files)
  debug:
    msg: "Import includes a potentially destructive change -- requires manual review in UI prior to sharing."
  changed_when: True
  when: __iimam_reimport.rc is defined and __iimam_reimport.rc == 246
  with_items: "{{ __ibm_infosvr_metadata_asset_mgr_reimport_local.results }}"
  loop_control:
    loop_var: __iimam_reimport
    label: "{{ __iimam_reimport.item.name }}"

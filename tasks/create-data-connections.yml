---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: data_connections - check if data connection exists
  uri:
    url: "https://{{ ibm_infosvr_metadata_asset_mgr_services_host }}:{{ ibm_infosvr_metadata_asset_mgr_services_console_port }}/ibm/iis/igc-rest/v1/search/"
    method: POST
    user: "{{ ibm_infosvr_metadata_asset_mgr_admin_user }}"
    password: "{{ ibm_infosvr_metadata_asset_mgr_admin_user_pwd }}"
    body: '{"properties":["name"],"types":["data_connection"],"where":{"conditions":[{"value":"{{ item.name }}","property":"name","operator":"="}],"operator":"and"}}'
    body_format: json
    validate_certs: no
    status_code: 200
    headers:
      Content-Type: "application/json"
  with_items: "{{ data_connections }}"
  register: ibm_infosvr_metadata_asset_manager_existing_dcn
  loop_control:
    label: "{{ item.name }}"

- name: data_connections - encrypt any password information
  no_log: True
  command: >
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/encrypt.sh
          {% if item.dcn is defined and item.dcn.password is defined %}{{ item.dcn.password }}{% elif item.password is defined %}{{ item.password }}{% else %}empty{% endif %}
  with_items: "{{ data_connections }}"
  changed_when: False
  register: __ibm_infosvr_metadata_asset_manager_encrypted_passwords_dcn

- name: data_connections - transfer data connection templates
  template:
    src: DCN_{{ item.item.type }}-v{{ ibm_infosvr_metadata_asset_mgr_installed_version|replace(".", "") }}.xml.j2
    dest: /tmp/DCN_{{ item.item.name }}-{{ item.item.type }}.xml
    mode: 0600
  with_items: "{{ __ibm_infosvr_metadata_asset_manager_encrypted_passwords_dcn.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: data_connections - create data connection
  shell: >
          source ~/.bashrc &&
          source dsenv &&
          {{ ibm_infosvr_metadata_asset_mgr_install_location }}/ASBNode/bin/imam.sh
          -af {{ __ibm_infosvr_metadata_asset_mgr_auth_file.path }}
          -a createDC
          -fp /tmp/DCN_{{ item.item.name }}-{{ item.item.type }}.xml
          -mn {{ ibm_infosvr_metadata_asset_mgr_engine_host }}
  args:
    chdir: "{{ ibm_infosvr_metadata_asset_mgr_install_location }}/Server/DSEngine"
    executable: /bin/bash
  when: item.json.paging.numTotal == 0
  with_items: "{{ ibm_infosvr_metadata_asset_manager_existing_dcn.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: data_connections - remove data connection configuration files
  file: state=absent path=/tmp/DCN_{{ item.name }}-{{ item.type }}.xml
  with_items: "{{ data_connections }}"
  loop_control:
    label: "{{ item.name }}"
